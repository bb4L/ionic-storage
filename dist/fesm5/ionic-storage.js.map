{"version":3,"file":"ionic-storage.js.map","sources":["ng://@ionic/storage/webdriver.ts","ng://@ionic/storage/storage.ts","ng://@ionic/storage/index.ts"],"sourcesContent":["declare let chrome: any;\r\nconst webdriver: LocalForageDriver = {\r\n        _driver: \"webExtensionLocalStorage\",\r\n        _initStorage(): Promise<void> {\r\n            return Promise.resolve();\r\n        },\r\n        clear(callback ?: (err: any) => void): Promise<void> {\r\n            return new Promise((resolve, reject) => {\r\n                chrome.storage.local.clear(res => {\r\n                    if (callback) {\r\n                        callback(res);\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n        },\r\n        getItem<T>(key: string, callback?: (err: any, value: T) => void): Promise<T> {\r\n            return new Promise((resolve, reject) => {\r\n                chrome.storage.local.get(key, res => {\r\n                    if (callback) {\r\n                        callback(null, res);\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n\r\n        },\r\n        iterate<T, U>(iteratee: (value: T, key: string, iterationNumber: number) => U, callback?: (err: any, result: U) => void): Promise<U> {\r\n            return new Promise((resolve, reject) => {\r\n                chrome.storage.local.get(null, res => {\r\n                    res.forEach((key, i) => iteratee(res[key], key, i));\r\n                    if (callback) {\r\n                        callback(null, res);\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n\r\n        },\r\n\r\n        key(keyIndex: number, callback?: (err: any, key: string) => void): Promise<string> {\r\n            return new Promise((resolve, reject) => {\r\n                chrome.storage.local.get(null, res => {\r\n                    let sol:string = res.keys()[keyIndex];\r\n                    if (callback) {\r\n                        callback(null, sol);\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n        },\r\n        keys(callback ?: (err: any, keys: string[]) => void): Promise<string[]> {\r\n            return new Promise(\r\n                (resolve, reject) => {\r\n                    chrome.storage.local.get(null, res => {\r\n                        if (callback) {\r\n                            callback(null, res);\r\n                        }\r\n                        resolve(res);\r\n                    });\r\n                }\r\n            );\r\n        },\r\n        length(callback ?: (err: any, numberOfKeys: number) => void): Promise<number> {\r\n            return new Promise(\r\n                (resolve, reject) => {\r\n                    chrome.storage.local.get(null, res => {\r\n                        if (callback) {\r\n                            callback(null, res.keys.length);\r\n                        }\r\n                        resolve(res.keys.length);\r\n                    });\r\n                }\r\n            );\r\n        },\r\n        removeItem(key: string, callback ?: (err: any) => void): Promise<void> {\r\n            return new Promise(\r\n                (resolve, reject) => {\r\n                    chrome.storage.local.remove(key, res => {\r\n                        if (callback) {\r\n                            callback(res);\r\n                        }\r\n                        resolve(res);\r\n                    });\r\n                }\r\n            );\r\n        },\r\n        setItem<T>(key: string, value: T, callback?: (err: any, value: T) => void): Promise<T> {\r\n            return new Promise(\r\n                (resolve, reject) => {\r\n                    let obj = {}\r\n                    obj[key] = value\r\n                    chrome.storage.local.set(obj, res => {\r\n                        if (callback) {\r\n                            callback(null, res);\r\n                        }\r\n                        resolve(res);\r\n                    });\r\n                }\r\n            );\r\n        }\r\n}\r\n;\r\n\r\nexport default webdriver;\r\n// add the driver to localForage.\r\n// localforage.defineDriver(myCustomDriver);","import { InjectionToken } from '@angular/core';\r\n\r\nimport * as LocalForage from 'localforage';\r\n\r\nimport * as CordovaSQLiteDriver from 'localforage-cordovasqlitedriver';\r\n\r\nimport chromeExtensionDriver from './webdriver';\r\n/**\r\n * Storage is an easy way to store key/value pairs and JSON objects.\r\n * Storage uses a variety of storage engines underneath, picking the best one available\r\n * depending on the platform.\r\n *\r\n * When running in a native app context, Storage will prioritize using SQLite, as it's one of\r\n * the most stable and widely used file-based databases, and avoids some of the\r\n * pitfalls of things like localstorage and IndexedDB, such as the OS deciding to clear out such\r\n * data in low disk-space situations.\r\n *\r\n * When running in the web or as a Progressive Web App, Storage will attempt to use\r\n * IndexedDB, WebSQL, and localstorage, in that order.\r\n *\r\n * @usage\r\n * First, if you'd like to use SQLite, install the cordova-sqlite-storage plugin:\r\n * ```bash\r\n * ionic cordova plugin add cordova-sqlite-storage\r\n * ```\r\n *\r\n * Next, install the package (comes by default for Ionic apps > Ionic V1):\r\n * ```bash\r\n * npm install --save @ionic/storage\r\n * ```\r\n *\r\n * Next, add it to the imports list in your `NgModule` declaration (for example, in `src/app/app.module.ts`):\r\n *\r\n * ```typescript\r\n * import { IonicStorageModule } from '@ionic/storage';\r\n *\r\n * @NgModule({\r\n *   declarations: [\r\n *     // ...\r\n *   ],\r\n *   imports: [\r\n *     BrowserModule,\r\n *     IonicModule.forRoot(MyApp),\r\n *     IonicStorageModule.forRoot()\r\n *   ],\r\n *   bootstrap: [IonicApp],\r\n *   entryComponents: [\r\n *     // ...\r\n *   ],\r\n *   providers: [\r\n *     // ...\r\n *   ]\r\n * })\r\n * export class AppModule {}\r\n *```\r\n *\r\n * Finally, inject it into any of your components or pages:\r\n * ```typescript\r\n * import { Storage } from '@ionic/storage';\r\n\r\n * export class MyApp {\r\n *   constructor(private storage: Storage) { }\r\n *\r\n *   ...\r\n *\r\n *   // set a key/value\r\n *   storage.set('name', 'Max');\r\n *\r\n *   // Or to get a key/value pair\r\n *   storage.get('age').then((val) => {\r\n *     console.log('Your age is', val);\r\n *   });\r\n * }\r\n * ```\r\n *\r\n *\r\n * ### Configuring Storage\r\n *\r\n * The Storage engine can be configured both with specific storage engine priorities, or custom configuration\r\n * options to pass to localForage. See the localForage config docs for possible options: https://github.com/localForage/localForage#configuration\r\n *\r\n * Note: Any custom configurations will be merged with the default configuration\r\n *\r\n * ```typescript\r\n * import { IonicStorageModule } from '@ionic/storage';\r\n *\r\n * @NgModule({\r\n *   declarations: [...],\r\n *   imports: [\r\n *     IonicStorageModule.forRoot({\r\n *       name: '__mydb',\r\n         driverOrder: ['indexeddb', 'sqlite', 'websql']\r\n *     })\r\n *   ],\r\n *   bootstrap: [...],\r\n *   entryComponents: [...],\r\n *    providers: [...]\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n */\r\nexport class Storage {\r\n  private _dbPromise: Promise<LocalForage>;\r\n  private _driver: string = null;\r\n\r\n  /**\r\n   * Create a new Storage instance using the order of drivers and any additional config\r\n   * options to pass to LocalForage.\r\n   *\r\n   * Possible driver options are: ['sqlite', 'indexeddb', 'websql', 'localstorage'] and the\r\n   * default is that exact ordering.\r\n   */\r\n  constructor(config: StorageConfig) {\r\n    this._dbPromise = new Promise((resolve, reject) => {\r\n      let db: LocalForage;\r\n\r\n      const defaultConfig = getDefaultConfig();\r\n      const actualConfig = Object.assign(defaultConfig, config || {});\r\n\r\n      LocalForage.defineDriver(chromeExtensionDriver)\r\n        .then(() => {\r\n          db = LocalForage.createInstance(actualConfig);\r\n        })\r\n        .then(() =>\r\n          db.setDriver(this._getDriverOrder(actualConfig.driverOrder))\r\n        )\r\n        .then(() => {\r\n          this._driver = db.driver();\r\n          resolve(db);\r\n        })\r\n        .catch(reason => reject(reason));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the name of the driver being used.\r\n   * @returns Name of the driver\r\n   */\r\n  get driver(): string | null {\r\n    return this._driver;\r\n  }\r\n\r\n  /**\r\n   * Reflect the readiness of the store.\r\n   * @returns Returns a promise that resolves when the store is ready\r\n   */\r\n  ready(): Promise<LocalForage> {\r\n    return this._dbPromise;\r\n  }\r\n\r\n  /** @hidden */\r\n  private _getDriverOrder(driverOrder) {\r\n    return driverOrder.map(driver => {\r\n      switch (driver) {\r\n        case 'sqlite':\r\n          return CordovaSQLiteDriver._driver;\r\n        case 'indexeddb':\r\n          return LocalForage.INDEXEDDB;\r\n        case 'websql':\r\n          return LocalForage.WEBSQL;\r\n        case 'localstorage':\r\n          return LocalForage.LOCALSTORAGE;\r\n        case \"webExtensionLocalStorage\":\r\n          return chromeExtensionDriver._driver;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the value associated with the given key.\r\n   * @param key the key to identify this value\r\n   * @returns Returns a promise with the value of the given key\r\n   */\r\n  get(key: string): Promise<any> {\r\n    return this._dbPromise.then(db => db.getItem(key));\r\n  }\r\n\r\n  /**\r\n   * Set the value for the given key.\r\n   * @param key the key to identify this value\r\n   * @param value the value for this key\r\n   * @returns Returns a promise that resolves when the key and value are set\r\n   */\r\n  set(key: string, value: any): Promise<any> {\r\n    return this._dbPromise.then(db => db.setItem(key, value));\r\n  }\r\n\r\n  /**\r\n   * Remove any value associated with this key.\r\n   * @param key the key to identify this value\r\n   * @returns Returns a promise that resolves when the value is removed\r\n   */\r\n  remove(key: string): Promise<any> {\r\n    return this._dbPromise.then(db => db.removeItem(key));\r\n  }\r\n\r\n  /**\r\n   * Clear the entire key value store. WARNING: HOT!\r\n   * @returns Returns a promise that resolves when the store is cleared\r\n   */\r\n  clear(): Promise<void> {\r\n    return this._dbPromise.then(db => db.clear());\r\n  }\r\n\r\n  /**\r\n   * @returns Returns a promise that resolves with the number of keys stored.\r\n   */\r\n  length(): Promise<number> {\r\n    return this._dbPromise.then(db => db.length());\r\n  }\r\n\r\n  /**\r\n   * @returns Returns a promise that resolves with the keys in the store.\r\n   */\r\n  keys(): Promise<string[]> {\r\n    return this._dbPromise.then(db => db.keys());\r\n  }\r\n\r\n  /**\r\n   * Iterate through each key,value pair.\r\n   * @param iteratorCallback a callback of the form (value, key, iterationNumber)\r\n   * @returns Returns a promise that resolves when the iteration has finished.\r\n   */\r\n  forEach(\r\n    iteratorCallback: (value: any, key: string, iterationNumber: Number) => any\r\n  ): Promise<void> {\r\n    return this._dbPromise.then(db => db.iterate(iteratorCallback));\r\n  }\r\n}\r\n\r\n/** @hidden */\r\nexport function getDefaultConfig() {\r\n  return {\r\n    name: '_ionicstorage',\r\n    storeName: '_ionickv',\r\n    dbKey: '_ionickey',\r\n    driverOrder: ['sqlite', 'indexeddb', 'websql', 'localstorage']\r\n  };\r\n}\r\n\r\n/** @hidden */\r\nexport interface StorageConfig {\r\n  name?: string;\r\n  version?: number;\r\n  size?: number;\r\n  storeName?: string;\r\n  description?: string;\r\n  driverOrder?: string[];\r\n  dbKey?: string;\r\n}\r\n\r\n/** @hidden */\r\nexport const StorageConfigToken = new InjectionToken<any>(\r\n  'STORAGE_CONFIG_TOKEN'\r\n);\r\n\r\n/** @hidden */\r\nexport function provideStorage(storageConfig: StorageConfig): Storage {\r\n  const config = !!storageConfig ? storageConfig : getDefaultConfig();\r\n  return new Storage(config);\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport {\r\n  getDefaultConfig,\r\n  provideStorage,\r\n  Storage,\r\n  StorageConfig,\r\n  StorageConfigToken\r\n} from './storage';\r\n\r\nexport { StorageConfig, StorageConfigToken, Storage };\r\n\r\n@NgModule()\r\nexport class IonicStorageModule {\r\n  static forRoot(storageConfig: StorageConfig = null): ModuleWithProviders {\r\n    return {\r\n      ngModule: IonicStorageModule,\r\n      providers: [\r\n        { provide: StorageConfigToken, useValue: storageConfig },\r\n        {\r\n          provide: Storage,\r\n          useFactory: provideStorage,\r\n          deps: [StorageConfigToken]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":["LocalForage.defineDriver","chromeExtensionDriver","LocalForage.createInstance","CordovaSQLiteDriver._driver","LocalForage.INDEXEDDB","LocalForage.WEBSQL","LocalForage.LOCALSTORAGE"],"mappings":"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"}
